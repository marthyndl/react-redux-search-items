{"ast":null,"code":"import _classCallCheck from \"/home/tincho/Documentos/Projects/React/react-redux-search-items/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tincho/Documentos/Projects/React/react-redux-search-items/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tincho/Documentos/Projects/React/react-redux-search-items/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tincho/Documentos/Projects/React/react-redux-search-items/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tincho/Documentos/Projects/React/react-redux-search-items/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tincho/Documentos/Projects/React/react-redux-search-items/src/components/autocomplete/index.js\";\nimport React, { Component } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './style.css';\n\nvar Autocomplete =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Autocomplete, _Component);\n\n  function Autocomplete(props) {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autocomplete).call(this, props));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          suggestions = _this$props.suggestions,\n          onChangeText = _this$props.onChangeText,\n          onChangeSelection = _this$props.onChangeSelection,\n          text = _this$props.text;\n      var isOpen = this.state.isOpen;\n      return React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(InputBase, {\n        placeholder: \"Search\\u2026\",\n        value: text,\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(event) {\n          var newText = event.target.value;\n          onChangeText(newText);\n\n          if (!isOpen && newText) {\n            _this2.setState({\n              isOpen: true\n            });\n          } else if (isOpen && !newText) {\n            _this2.setState({\n              isOpen: false\n            });\n          }\n        },\n        onBlur: function onBlur() {\n          setTimeout(function () {\n            return _this2.setState({\n              isOpen: false\n            });\n          }, 100);\n        },\n        onFocus: function onFocus() {\n          if (text) {\n            _this2.setState({\n              isOpen: true\n            });\n          }\n        },\n        onKeyPress: function onKeyPress(event) {\n          if (event.key === 'Enter' && text) {\n            onChangeSelection(text);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), isOpen && React.createElement(Paper, {\n        className: \"container-results\",\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, suggestions.map(function (suggestion) {\n        return React.createElement(MenuItem, {\n          key: suggestion.id,\n          component: \"div\",\n          onClick: function onClick() {\n            onChangeSelection(suggestion.title);\n\n            _this2.setState({\n              isOpen: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, suggestion.title);\n      })));\n    }\n  }]);\n\n  return Autocomplete;\n}(Component);\n\nexport default Autocomplete;","map":{"version":3,"sources":["/home/tincho/Documentos/Projects/React/react-redux-search-items/src/components/autocomplete/index.js"],"names":["React","Component","InputBase","SearchIcon","Paper","MenuItem","Autocomplete","props","state","isOpen","suggestions","onChangeText","onChangeSelection","text","width","event","newText","target","value","setState","setTimeout","key","map","suggestion","id","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './style.css';\n\nclass Autocomplete extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n        };\n    }\n\n    render() {\n        const {\n            suggestions,\n            onChangeText,\n            onChangeSelection,\n            text,\n        } = this.props;\n        const {\n            isOpen,\n        } = this.state;\n\n        return (\n            <div className=\"main-container\">\n                <div className=\"container-icon\">\n                    <SearchIcon />\n                </div>\n                <InputBase\n                    placeholder=\"Searchâ€¦\"\n                    value={text}\n                    style={{ width: '100%' }}\n                    onChange={(event) => {\n                        const newText = event.target.value;\n\n                        onChangeText(newText);\n\n                        if (!isOpen && newText) {\n                            this.setState({ isOpen: true });\n                        } else if (isOpen && !newText) {\n                            this.setState({ isOpen: false });\n                        }\n                    }}\n                    onBlur={() => {\n                        setTimeout(() => this.setState({ isOpen: false }), 100);\n                    }}\n                    onFocus={() => {\n                        if (text) {\n                            this.setState({ isOpen: true });\n                        }\n                    }}\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter' && text) {\n                            onChangeSelection(text);\n                        }\n                    }}\n                />\n                {isOpen &&\n                <Paper className=\"container-results\" square>\n                    {suggestions.map(suggestion =>\n                    <MenuItem\n                        key={suggestion.id}\n                        component=\"div\"\n                        onClick={() => {\n                            onChangeSelection(suggestion.title);\n                            this.setState({ isOpen: false });\n                        }}\n                    >\n                        {suggestion.title}\n                    </MenuItem>)}\n                </Paper>}\n            </div>\n        );\n    }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}